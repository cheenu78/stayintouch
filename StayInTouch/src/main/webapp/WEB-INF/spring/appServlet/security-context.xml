<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.0.xsd">

 	<http auto-config="true" use-expressions="true">
 		
 		<intercept-url pattern="/app/spring/welcome*" access="permitAll" />
		<intercept-url pattern="/app/spring/logout*" access="permitAll" />
		<intercept-url pattern="/app/spring/loginFailed*" access="permitAll" />
		<intercept-url pattern="/app/spring/resources/**" access="permitAll" />
		<intercept-url pattern="/app/spring/ajax/**" access="permitAll" />
		
		<intercept-url pattern="/app/spring/signup" access="permitAll" />
		<intercept-url pattern="/app/spring/" access="permitAll" />
		
		<intercept-url pattern="/app/spring/main" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/app/spring/rest/**" access="hasRole('ROLE_USER')" />
 		
 		<form-login login-page="/app/spring/welcome" default-target-url="/app/spring/main" authentication-failure-url="/app/spring/loginFailed" />
 		<logout logout-url="/j_spring_security_logout" logout-success-url="/app/spring/logout" />
 		
 		<remember-me data-source-ref="dataSource"/>
 	</http>
 	
 
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		   users-by-username-query="select email, password, 1 
		   from user_table 
		   where email=?" 
		   
		   	authorities-by-username-query="
		   	select email, c.role_name 
		   	from user_table a, 
       		user_role_mapping b, 
       		user_roles c
		   	where email=?
       		and a.ID = b. USER_TABLE_ID
       		and b.ROLE_ID = c.role_id"
		/>
		
	  </authentication-provider>
	</authentication-manager>
 
</beans:beans>